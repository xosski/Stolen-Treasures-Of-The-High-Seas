🕯️ GhostShell v1.0.0 – Volatile Memory. Absolute Silence.
🌐 Core Features
Ephemeral Shell Environment
Executes JavaScript payloads directly in memory — no disk writes, no DOM traces, no persistence.

Fragment-Based Injection Framework
Accepts base64-encoded payloads via indexed fragment loading (injectGhostFragment(i, "...")).

Self-Purging Runtime (TTL)
GhostShell clears its presence after 3 minutes by default, removing injected functions and payloads from memory.

No Filesystem Footprint
Completely browser-resident — zero reliance on storage APIs, cookies, or external logs.

🧩 Toolkit & Integration
🧠 React Red Team Module
UI for recon, exploitation, payload generation, and GhostShell injection tab. Polished. Responsive. Ghost-ready.

🪂 Drag-and-Drop Fragment Injector
Upload a .txt of base64 fragments and inject live into memory through the UI.

🧬 Fragment Generator
Generate GhostShell-ready payloads from any JavaScript snippet. One-click conversion to injectGhostFragment(...) format.

🛡️ Blue Team Companion Guide
GhostShell_BlueTeamGuide.md
Detection patterns, CSP recommendations, TTL sniffing, and training simulation setups.

🔐 Ethics Clause: GhostCore v1.0
Usage governed by ethical doctrine.
This is a tool for testing the invisible, not enabling the malicious.
“This is not stealth. This is the silence after a scream.”
